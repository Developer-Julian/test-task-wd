// <auto-generated />
namespace TestTaskWD.Proxy
{
    using System;
    using System.Text;
    using Newtonsoft.Json;
    using TestTaskWD.Proxy.Exceptions;

    internal sealed class ProxySerializer : IProxySerializer
    {
        private static readonly Encoding Encoding = Encoding.UTF8;

        public T Deserialize<T>(byte[] source)
        {
            var json = Encoding.GetString(source);
            T result;

            try
            {
                result = System.Text.Json.JsonSerializer.Deserialize<T>(json);
            }
            catch (Exception ex)
            {
                throw new SerializationException(
                    "An error has occurred while deserializing object",
                    json,
                    ex);
            }

            if (result == null)
            {
                throw new SerializationException(
                    "Source string deserialized to null",
                    json);
            }

            return result;
        }

        public T DeserializeObject<T>(byte[] source)
        {
            var json = Encoding.GetString(source);
            T result;

            try
            {
                result = JsonConvert.DeserializeObject<T>(json);
            }
            catch (Exception ex)
            {
                throw new SerializationException(
                    "An error has occurred while deserializing object",
                    json,
                    ex);
            }

            if (result == null)
            {
                throw new SerializationException(
                    "Source string deserialized to null",
                    json);
            }

            return result;
        }

        public byte[] Serialize<T>(T source)
        {
            string json;

            try
            {
                json = System.Text.Json.JsonSerializer.Serialize(source);
            }
            catch (Exception ex)
            {
                throw new SerializationException(
                    "An error has occurred while serializing object",
                    ex);
            }

            return Encoding.GetBytes(json);
        }
    }
}
