// <auto-generated />
namespace TestTaskWD.Proxy
{
    using System;
    using System.Net.Http;
    using TestTaskWD.Configuration;

    internal abstract class ProxyClientFactoryBase
    {
        private readonly IHttpClientFactory httpClientFactory;

        protected ProxyClientFactoryBase(
            ServiceConfiguration serviceConfiguration,
            IHttpClientFactory httpClientFactory)
        {
            this.ServiceConfiguration = serviceConfiguration;
            this.httpClientFactory = httpClientFactory;
        }

        protected ServiceConfiguration ServiceConfiguration { get; }

        protected ProxyClientConfiguration CreateProxyConfiguration(
            Func<ServiceConfiguration, string> getApiBaseUrl)
        {
            return new ProxyClientConfiguration(getApiBaseUrl(this.ServiceConfiguration));
        }

        protected IProxySerializer CreateProxySerializer() => new ProxySerializer();

        protected IProxyHttpClient CreateProxyHttpClient() => new ProxyHttpClient(this.httpClientFactory);
    }
}
