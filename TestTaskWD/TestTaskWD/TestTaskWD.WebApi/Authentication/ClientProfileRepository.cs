// <auto-generated />
namespace TestTaskWD.WebApi.Authentication
{
    using System.Collections.Generic;
    using System.Threading.Tasks;
    using Serilog;
    using TestTaskWD.WebApi.Configuration;

    internal class ClientProfileRepository : IClientProfileRepository
    {
        private readonly Dictionary<string, ClientProfile> profilesByApiKey = new Dictionary<string, ClientProfile>();
        private readonly ILogger logger = Log.ForContext<ClientProfileRepository>();

        public ClientProfileRepository(VaultConfig vaultConfig)
        {
            // TODO: fill in from Vault server
            this.profilesByApiKey.Add(vaultConfig.Token, new ClientProfile(vaultConfig.Token, "s2s.private", "S2S Private API WD"));
        }

        public async Task<ClientProfile> FindProfile(string apiKey)
        {
            if (this.profilesByApiKey.TryGetValue(apiKey, out var result))
            {
                this.logger.Verbose(
                    "Application {appId} ({displayName}) found by ApiKey {apiKey}",
                    result.ClientId,
                    result.DisplayName,
                    MaskHelper.MaskApiKey(apiKey));
                return await Task.FromResult(result);
            }

            this.logger.Information("No application found by ApiKey {apiKey}", MaskHelper.MaskApiKey(apiKey));
            return await Task.FromResult<ClientProfile>(null);
        }
    }
}