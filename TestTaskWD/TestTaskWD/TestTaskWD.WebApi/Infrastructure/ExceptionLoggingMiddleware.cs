// <auto-generated />
namespace TestTaskWD.WebApi.Infrastructure
{
    using System;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Http;
    using Serilog;

    public class ExceptionLoggingMiddleware
    {
        private readonly RequestDelegate next;

        public ExceptionLoggingMiddleware(RequestDelegate next)
        {
            this.next = next;
        }

        // ReSharper disable once UnusedMember.Global
        public async Task InvokeAsync(HttpContext context)
        {
            try
            {
                await this.next(context);
            }
            catch (Exception ex)
            {
                Log.ForContext<ExceptionLoggingMiddleware>().Error(
                    ex,
                    "Error processing {RequestMethod} request to {RequestPath}: {ErrorMessage}",
                    context.Request.Method.ToUpperInvariant(),
                    context.Request.Path.Value,
                    ex.Message);
                throw;
            }
        }
    }
}